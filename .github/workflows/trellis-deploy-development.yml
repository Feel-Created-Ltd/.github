# .github/workflows/trellis-deploy-development.yml
name: deploy

on:
  workflow_call:
    inputs:
      BEDROCK_DEPLOY_BRANCH:
        type: string
        default: "${{ github.ref_name }}"
      NODE_VERSION:
        type: number
        default: 14
      THEME_NAME:
        type: string
        default: ""
      TRELLIS_ENVIRONMENT:
        type: string
        required: true
      TRELLIS_REPOSITORY:
        type: string
        required: true
      TRELLIS_CLI_AUTO_INIT:
        type: boolean
        default: true
      TRELLIS_CLI_CACHE_VIRTUALENV:
        type: boolean
        default: true
      TRELLIS_CLI_GALAXY_INSTALL:
        type: boolean
        default: true
      TRELLIS_CLI_VERSION:
        type: string
        default: latest
    secrets:
      REPO_PAT:
        required: true
      TRELLIS_DEPLOY_SSH_PRIVATE_KEY:
        required: true
      TRELLIS_DEPLOY_SSH_KNOWN_HOSTS:
        required: true
      ANSIBLE_VAULT_PASSWORD:
        required: true
      ZEROTIER_CENTRAL_TOKEN:
        required: true
      ZEROTIER_NETWORK_ID:
        required: true
      ZEROTIER_GATEWAY_IP:
        required: true
      VPS_SSH_PRIVATE_KEY:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Trellis
        uses: actions/checkout@v4
        with:
          repository: "${{ inputs.TRELLIS_REPOSITORY }}"
          path: trellis
          token: "${{ secrets.REPO_PAT }}"

      - name: Get environment IP & port
        run: |
          HOST_IP=$(grep -Eo 'ansible_host=[0-9]{1,3}(\.[0-9]{1,3}){3}' "hosts/${{ inputs.TRELLIS_ENVIRONMENT }}" | sed 's/ansible_host=//g')
          KINSTA_PORT=$(grep -Eo 'ansible_port=[0-9]+' "hosts/${{ inputs.TRELLIS_ENVIRONMENT }}" | sed 's/ansible_port=//g')
          echo "HOST_IP=$HOST_IP" >> $GITHUB_ENV
          echo "KINSTA_PORT=$KINSTA_PORT" >> $GITHUB_ENV
        working-directory: trellis

      - name: Debug environment IP & port
        run: |
          echo "HOST_IP=$HOST_IP"
          echo "KINSTA_PORT=$KINSTA_PORT"

      - name: Install ZeroTier
        uses: zerotier/github-action@v1.0.3
        with:
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          auth_token: ${{ secrets.ZEROTIER_CENTRAL_TOKEN }}

      - name: Join ZeroTier network
        run: sudo zerotier-cli join ${{ secrets.ZEROTIER_NETWORK_ID }}

      - name: Verify ZeroTier network
        run: |
          sudo zerotier-cli info
          sudo zerotier-cli listnetworks

      - name: Route environment traffic through ZeroTier
        run: sudo ip route add "${HOST_IP}/32" via "${{ secrets.ZEROTIER_GATEWAY_IP }}"

      - name: Show routing table
        run: ip route

      - name: Save VPS SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > ~/.ssh/kinsta_vps_key
          chmod 600 ~/.ssh/kinsta_vps_key

      - name: Test SSH to VPS and Kinsta
        run: |
          echo "Testing connection via VPS to Kinsta..."
          ssh -i ~/.ssh/kinsta_vps_key -o StrictHostKeyChecking=no -J root@${{ secrets.ZEROTIER_GATEWAY_IP }} -p $KINSTA_PORT chiuni@$HOST_IP "echo Connection OK"

      - name: Checkout Bedrock
        uses: actions/checkout@v4
        with:
          path: bedrock

      - name: Setup Node
        uses: actions/setup-node@v4
        if: "${{ inputs.THEME_NAME != '' }}"
        with:
          node-version: "${{ inputs.NODE_VERSION }}"
          cache: yarn
          cache-dependency-path: bedrock/web/app/themes/${{ inputs.THEME_NAME }}/yarn.lock

      - name: Add Trellis deploy key
        uses: shimataro/ssh-key-action@v2
        with:
          key: "${{ secrets.TRELLIS_DEPLOY_SSH_PRIVATE_KEY }}"
          known_hosts: "${{ secrets.TRELLIS_DEPLOY_SSH_KNOWN_HOSTS }}"

      - uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: "${{ secrets.TRELLIS_DEPLOY_SSH_PRIVATE_KEY }}"

      - uses: roots/setup-trellis-cli@v1.3.1
        with:
          ansible-vault-password: "${{ secrets.ANSIBLE_VAULT_PASSWORD }}"
          auto-init: "${{ inputs.TRELLIS_CLI_AUTO_INIT }}"
          cache-virtualenv: "${{ inputs.TRELLIS_CLI_CACHE_VIRTUALENV }}"
          galaxy-install: "${{ inputs.TRELLIS_CLI_GALAXY_INSTALL }}"
          version: "${{ inputs.TRELLIS_CLI_VERSION }}"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Trellis CLI
        run: |
          mkdir -p ~/.trellis-cli
          echo "allow_development_deploys: true" > ~/.trellis-cli/config.yml

      - name: Deploy
        working-directory: trellis
        run: |
          export KINSTA_PHP_PREPEND=''
          trellis deploy --verbose --branch="${{ inputs.BEDROCK_DEPLOY_BRANCH }}" "${{ inputs.TRELLIS_ENVIRONMENT }}"
